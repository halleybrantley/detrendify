
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ################################################################################
> # Fit quantile trends on week of data
> # Halley Brantley
> ################################################################################
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.2.1 ──
✔ ggplot2 3.1.0     ✔ purrr   0.2.5
✔ tibble  1.4.2     ✔ dplyr   0.7.7
✔ tidyr   0.8.2     ✔ stringr 1.3.1
✔ readr   1.1.1     ✔ forcats 0.3.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> library(devtools)
> library(Hmisc)
Loading required package: lattice
Loading required package: survival
Loading required package: Formula

Attaching package: ‘Hmisc’

The following objects are masked from ‘package:dplyr’:

    src, summarize

The following objects are masked from ‘package:base’:

    format.pval, units

> library(fields)
Loading required package: spam
Loading required package: dotCall64
Loading required package: grid
Spam version 2.2-0 (2018-06-19) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: maps

Attaching package: ‘maps’

The following object is masked from ‘package:purrr’:

    map

See www.image.ucar.edu/~nychka/Fields for
 a vignette and other supplements. 

Attaching package: ‘fields’

The following object is masked from ‘package:Hmisc’:

    describe

> library(gurobi)
Loading required package: slam
> library(zoo)

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

> load_all("detrendr")
Loading detrendr

Attaching package: ‘testthat’

The following object is masked from ‘package:fields’:

    describe

The following object is masked from ‘package:Hmisc’:

    describe

The following objects are masked from ‘package:devtools’:

    setup, test_file

The following object is masked from ‘package:dplyr’:

    matches

The following object is masked from ‘package:purrr’:

    is_null

> rm(list=ls())
> 
> i = 6
> spod <- read.csv(sprintf("../SPod/SPod_week/SENTINEL Data_2017-03-0%d.csv",i), 
+                  header=TRUE,  na.strings = "N/A")
> spod$time <- as.POSIXct(strptime(as.character(spod$TimeStamp), 
+                                  format= "%m/%d/%Y %H:%M:%S")) 
> nodes <- c("c", "e")
> spodPIDs <- as.data.frame(spod[, paste(nodes, "SPOD.PID..V.", sep=".")])
> names(spodPIDs) <- nodes
> spodPIDs$c <- spodPIDs$c/1000
> spodPIDs$e <- spodPIDs$e/1000
> spodPIDs$time <- spod$time
> spodPIDs$c <- na.locf(spodPIDs$c)
> spodPIDs$e <- na.locf(spodPIDs$e)
> 
> spod_trends <- data.frame(time = spod$time)
> window_size <- 3600
> overlap <- 600
> max_iter <- 5
> tau <- c(0.01, 0.05, 0.1)
> 
> 
> for (node in nodes){
+   result0 <- get_windows_BIC(y=spodPIDs, tau, k=3, window_size, overlap,
+                             lambdaSeq = c(400, 800, 1000, 1600, 3200, 5000),
+                             df_tol = 1e-9,
+                             gamma = 1,
+                             plot_lambda = TRUE,
+                             eps_abs = 0.02, 
+                             eps_rel = 1e-3,
+                             solver = NULL,
+                             criteria = "eBIC", 
+                             max_iter = max_iter, 
+                             rho = 1, 
+                             update = 1)
+   spod_trends <- cbind(spod_trends, as.data.frame(result$trend))
+   names(spod_trends)[(ncol(spod_trends)-length(tau)+1):ncol(spod_trends)] <-
+     paste(node, tau, sep = "_")
+   save(spod_trends,  spodPIDs, 
+        file = sprintf("../SPod/SPod_week/trends_%s_2017-03-0%d.RData",node,i))
+ }
Error in FUN(X[[i]], ...) : 
  only defined on a data frame with all numeric variables
Calls: get_windows_BIC -> Summary.data.frame -> lapply -> FUN
Execution halted
