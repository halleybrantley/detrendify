
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ################################################################################
> # Fit quantile trends on shorter window
> # Halley Brantley
> ################################################################################
> library(fields)
Loading required package: spam
Loading required package: dotCall64
Loading required package: grid
Spam version 2.2-0 (2018-06-19) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: maps
See www.image.ucar.edu/~nychka/Fields for
 a vignette and other supplements. 
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.2.1 ──
✔ ggplot2 3.1.0     ✔ purrr   0.2.5
✔ tibble  1.4.2     ✔ dplyr   0.7.7
✔ tidyr   0.8.2     ✔ stringr 1.3.1
✔ readr   1.1.1     ✔ forcats 0.3.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
✖ purrr::map()    masks maps::map()
> library(devtools)
> library(Hmisc)
Loading required package: lattice
Loading required package: survival
Loading required package: Formula

Attaching package: ‘Hmisc’

The following objects are masked from ‘package:dplyr’:

    src, summarize

The following object is masked from ‘package:fields’:

    describe

The following objects are masked from ‘package:base’:

    format.pval, units

> library(zoo)

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

> load_all("detrendr")
Loading detrendr
Re-compiling detrendr
  ─  installing *source* package ‘detrendr’ ... (394ms)
     ** libs
     g++  -I"/usr/local/apps/R/gcc_4.8.5/R-3.5.1/lib64/R/include" -DNDEBUG -DARMA_64BIT_WORD=1 -I"/usr/local/apps/R/gcc_4.8.5/R-3.5.1/lib64/R/library/Rcpp/include" -I"/usr/local/apps/R/gcc_4.8.5/R-3.5.1/lib64/R/library/RcppArmadillo/include" -I/usr/local/include  -std=c++11 -fpic  -O2  -UNDEBUG -Wall -pedantic -g -O0 -c RcppExports.cpp -o RcppExports.o
     g++  -I"/usr/local/apps/R/gcc_4.8.5/R-3.5.1/lib64/R/include" -DNDEBUG -DARMA_64BIT_WORD=1 -I"/usr/local/apps/R/gcc_4.8.5/R-3.5.1/lib64/R/library/Rcpp/include" -I"/usr/local/apps/R/gcc_4.8.5/R-3.5.1/lib64/R/library/RcppArmadillo/include" -I/usr/local/include  -std=c++11 -fpic  -O2  -UNDEBUG -Wall -pedantic -g -O0 -c getDk.cpp -o getDk.o
     g++  -I"/usr/local/apps/R/gcc_4.8.5/R-3.5.1/lib64/R/include" -DNDEBUG -DARMA_64BIT_WORD=1 -I"/usr/local/apps/R/gcc_4.8.5/R-3.5.1/lib64/R/library/Rcpp/include" -I"/usr/local/apps/R/gcc_4.8.5/R-3.5.1/lib64/R/library/RcppArmadillo/include" -I/usr/local/include  -std=c++11 -fpic  -O2  -UNDEBUG -Wall -pedantic -g -O0 -c prox.cpp -o prox.o
     g++  -I"/usr/local/apps/R/gcc_4.8.5/R-3.5.1/lib64/R/include" -DNDEBUG -DARMA_64BIT_WORD=1 -I"/usr/local/apps/R/gcc_4.8.5/R-3.5.1/lib64/R/library/Rcpp/include" -I"/usr/local/apps/R/gcc_4.8.5/R-3.5.1/lib64/R/library/RcppArmadillo/include" -I/usr/local/include  -std=c++11 -fpic  -O2  -UNDEBUG -Wall -pedantic -g -O0 -c spingarn.cpp -o spingarn.o
     g++ -shared -L/usr/local/apps/R/gcc_4.8.5/R-3.5.1/lib64/R/lib -L/usr/local/lib64 -L/lib64 -o detrendr.so RcppExports.o getDk.o prox.o spingarn.o -Wl,--no-as-needed -lmkl_gf_lp64 -Wl,--start-group -lmkl_gnu_thread -lmkl_core -Wl,--end-group -fopenmp -ldl -lpthread -lm -lgfortran -lm -lquadmath -L/usr/local/apps/R/gcc_4.8.5/R-3.5.1/lib64/R/lib -lR
     installing to /gpfs_common/share02/triclustering/hlbrantl/tmp/RtmpMA3h4G/devtools_install_e622abd48ec/detrendr/libs
  ─  DONE (detrendr)

Attaching package: ‘testthat’

The following object is masked from ‘package:Hmisc’:

    describe

The following objects are masked from ‘package:devtools’:

    setup, test_file

The following object is masked from ‘package:dplyr’:

    matches

The following object is masked from ‘package:purrr’:

    is_null

The following object is masked from ‘package:fields’:

    describe

> rm(list=ls())
> # spod <- read.csv("../SPod/fhrdata_2017-11-30.csv", 
> #                  header=TRUE,  na.strings = "N/A")
> # spod$time <- as.POSIXct(strptime(as.character(spod$TimeStamp), 
> #                                  format= "%m/%d/%Y %H:%M:%S")) 
> # spodPID <- as.data.frame(spod[, paste(nodes, "SPOD.PID..V.", sep=".")]/1000)
> # names(spodPID) <- nodes
> # spodPID$time <- spod$time
> 
> load("../SPod/spodPIDs.RData")
> nodes <- c("c", "d", "e")
> spodPID <- spodPIDs
> spodPID[, nodes] <- as.data.frame(scale(spodPID[, nodes]))
> spodPIDs <- spodPID %>% 
+   filter(time > as.POSIXct("2017-04-13 13:20:00"),
+          time <= as.POSIXct("2017-04-13 13:20:00")+6000)
> 
> plot(spodPIDs$c, type="l")
> tau <- c(0.5, 0.1, 0.15)
> k <- 3
> 
> detrendr_trends <- data.frame(time = spodPIDs$time)
> qsreg_trends <- data.frame(time = spodPIDs$time)
> n <- nrow(spodPIDs)
> x <- seq(1, nrow(spodPIDs), 1)
> for (node in nodes){
+   missID <- which(is.na(spodPIDs[, node]))
+   spodPIDs[,node] <- na.locf(spodPIDs[,node])
+   spodPIDs[missID, node] <- spodPIDs[missID, node]  + rnorm(length(missID), 0, .001)
+   result <- get_trend_BIC(spodPIDs[, node], tau, k, 
+                             lambdaSeq = exp(seq(11,18,1)),
+                             df_tol = 1e-9,
+                             gamma = 1,
+                             plot_lambda = TRUE,
+                             solver = "gurobi",
+                             criteria = "eBIC")
+   detrendr_trends <- cbind(detrendr_trends, as.data.frame(result$theta))
+   names(detrendr_trends)[(ncol(detrendr_trends)-(length(tau)-1)):
+                            ncol(detrendr_trends)] <-
+     paste(node, tau, sep = "_")
+   
+   trend <- matrix(NA, n, length(tau))
+   for (j in 1:length(tau)){
+     fit_qsreg <- qsreg(x, spodPIDs[,node], maxit.cv = 50, 
+                        alpha=tau[j], hmin = -6, hmax = NA)
+     trend[,j] <- predict(fit_qsreg)    
+   }
+   qsreg_trends <- cbind(qsreg_trends, as.data.frame(trend))
+   names(qsreg_trends)[(ncol(qsreg_trends)-(length(tau)-1)):ncol(qsreg_trends)] <-
+     paste(node, tau, sep = "_")
+ }
Using same lambda for all quantiles
Loading required package: gurobi
Loading required package: slam
[1] "i=1 lambda=59874.141715"
