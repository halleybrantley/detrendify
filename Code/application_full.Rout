
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ################################################################################
> # Fit quantile trends on full application dataset
> # Halley Brantley
> ################################################################################
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.2.1 ──
✔ ggplot2 3.1.0     ✔ purrr   0.2.5
✔ tibble  1.4.2     ✔ dplyr   0.7.7
✔ tidyr   0.8.2     ✔ stringr 1.3.1
✔ readr   1.1.1     ✔ forcats 0.3.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> library(devtools)
> library(Hmisc)
Loading required package: lattice
Loading required package: survival
Loading required package: Formula

Attaching package: ‘Hmisc’

The following objects are masked from ‘package:dplyr’:

    src, summarize

The following objects are masked from ‘package:base’:

    format.pval, units

> load_all("detrendr")
Loading detrendr
Loading required package: Matrix

Attaching package: ‘Matrix’

The following object is masked from ‘package:tidyr’:

    expand


Attaching package: ‘testthat’

The following object is masked from ‘package:Hmisc’:

    describe

The following objects are masked from ‘package:devtools’:

    setup, test_file

The following object is masked from ‘package:dplyr’:

    matches

The following object is masked from ‘package:purrr’:

    is_null

> rm(list=ls())
> spod <- read.csv("../SPod/fhrdata_2017-11-30.csv", 
+                  header=TRUE,  na.strings = "N/A")
> spod$time <- as.POSIXct(strptime(as.character(spod$TimeStamp), 
+                                  format= "%m/%d/%Y %H:%M:%S")) 
> 
> window_size <- 8000
> overlap <- 2000
> max_iter <- 10
> tau <- c(0.05, 0.1)
> k <- 3
> spod_trends <- data.frame(time = spod$time)
> 
> 
> for (node in c("f", "g", "h")){
+   pidCol <- paste(node, "SPOD.PID..V.", sep=".")
+   spodNode <- spod[, c("time", pidCol)]
+   names(spodNode)[2] <- c("pid")
+   spodNode$pid <- spodNode$pid/1000
+   result <- get_windows_BIC(spodNode$pid, tau, k, window_size, overlap,
+                           lambdaSeq = window_size^seq(1.1, 1.5, length.out=10),
+                           df_tol = 1e-9,
+                           gamma = 1,
+                           plot_lambda = FALSE,
+                           solver = NULL,
+                           criteria = "eBIC")
+   save(result, file=sprintf("../SPod/node_%s_trend.RData", node))
+   spod_trends <- cbind(spod_trends, as.data.frame(result$trend))
+   names(spod_trends)[(ncol(spod_trends)-2):ncol(spod_trends)] <-
+     paste(node, tau, sep = "_")
+ }
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Loading required package: gurobi
Loading required package: slam
[1] "Converged in 2 iterations"
[1] "i=1 lambda=19651.648418"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Converged in 3 iterations"
[1] "i=2 lambda=29300.137052"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Converged in 4 iterations"
[1] "i=3 lambda=43685.802484"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Converged in 4 iterations"
[1] "i=4 lambda=65134.485046"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Iteration: 5 Primal Resid Norm: 0.5215 eps_pri: 0.7437, Dual Resid Norm: 0.6413  eps_dual 0.7423"
[1] "Converged in 5 iterations"
[1] "i=5 lambda=97113.956960"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Iteration: 5 Primal Resid Norm: 0.5326 eps_pri: 0.7437, Dual Resid Norm: 0.6580  eps_dual 0.7425"
[1] "Converged in 5 iterations"
[1] "i=6 lambda=144794.583543"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Converged in 4 iterations"
[1] "i=7 lambda=215885.255628"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Iteration: 5 Primal Resid Norm: 0.6513 eps_pri: 0.7438, Dual Resid Norm: 0.7181  eps_dual 0.7432"
[1] "Converged in 5 iterations"
[1] "i=8 lambda=321879.744787"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Iteration: 5 Primal Resid Norm: 0.7355 eps_pri: 0.7438, Dual Resid Norm: 0.9236  eps_dual 0.7435"
[1] "Converged in 7 iterations"
[1] "i=9 lambda=479914.989114"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Iteration: 5 Primal Resid Norm: 0.8500 eps_pri: 0.7438, Dual Resid Norm: 1.0422  eps_dual 0.7440"
[1] "Converged in 9 iterations"
[1] "i=10 lambda=715541.752800"
[1] "Problem not solved."
[1] "Problem not solved."
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Converged in 2 iterations"
[1] "i=1 lambda=19651.648418"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Converged in 2 iterations"
[1] "i=2 lambda=29300.137052"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Converged in 2 iterations"
[1] "i=3 lambda=43685.802484"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Converged in 2 iterations"
[1] "i=4 lambda=65134.485046"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Converged in 2 iterations"
[1] "i=5 lambda=97113.956960"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Converged in 2 iterations"
[1] "i=6 lambda=144794.583543"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Converged in 2 iterations"
[1] "i=7 lambda=215885.255628"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Converged in 2 iterations"
[1] "i=8 lambda=321879.744787"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Converged in 3 iterations"
[1] "i=9 lambda=479914.989114"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Converged in 3 iterations"
[1] "i=10 lambda=715541.752800"
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Converged in 2 iterations"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Converged in 3 iterations"
[1] "i=1 lambda=19651.648418"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Converged in 3 iterations"
[1] "i=2 lambda=29300.137052"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Converged in 4 iterations"
[1] "i=3 lambda=43685.802484"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Converged in 3 iterations"
[1] "i=4 lambda=65134.485046"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Converged in 3 iterations"
[1] "i=5 lambda=97113.956960"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Converged in 3 iterations"
[1] "i=6 lambda=144794.583543"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Converged in 4 iterations"
[1] "i=7 lambda=215885.255628"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Converged in 4 iterations"
[1] "i=8 lambda=321879.744787"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Converged in 4 iterations"
[1] "i=9 lambda=479914.989114"
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
Using same lambda for all quantiles
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Converged in 3 iterations"
[1] "i=10 lambda=715541.752800"
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
[1] "Problem not solved."
Warning messages:
1: In names(spod_trends)[(ncol(spod_trends) - 2):ncol(spod_trends)] <- paste(node,  :
  number of items to replace is not a multiple of replacement length
2: In names(spod_trends)[(ncol(spod_trends) - 2):ncol(spod_trends)] <- paste(node,  :
  number of items to replace is not a multiple of replacement length
3: In names(spod_trends)[(ncol(spod_trends) - 2):ncol(spod_trends)] <- paste(node,  :
  number of items to replace is not a multiple of replacement length
> save(spod_trends, file = "../SPod/spod_trends.RData")
> ################################################################################
> 
> 
> proc.time()
    user   system  elapsed 
49821.49 25462.05 13158.07 
